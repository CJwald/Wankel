cmake_minimum_required(VERSION 3.16)
project(WankelEngine LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON) # For IDEs and tools like clangd

# Define directories
set(SOURCE_DIR ${CMAKE_SOURCE_DIR}/src)
set(INCLUDE_DIR ${CMAKE_SOURCE_DIR}/src/include)
set(VENDOR_DIR ${CMAKE_SOURCE_DIR}/vendor)
set(SANDBOX_DIR ${CMAKE_SOURCE_DIR}/sandbox)

# Add Wankel engine as a static library
add_library(wankel_engine STATIC
#    ${SOURCE_DIR}/client/renderer.cpp
#    ${SOURCE_DIR}/client/input.cpp
#    ${SOURCE_DIR}/client/client.cpp
#    ${SOURCE_DIR}/server/server.cpp
#    ${SOURCE_DIR}/server/network.cpp
    ${SOURCE_DIR}/core/Wankle.cpp
)

# Set include directories for the engine
target_include_directories(wankel_engine
    PUBLIC ${INCLUDE_DIR}
    PRIVATE ${SOURCE_DIR}/client
    PRIVATE ${SOURCE_DIR}/server
    PRIVATE ${SOURCE_DIR}/core
)

# Add SDL3 as a subdirectory (git submodule)
#add_subdirectory(${VENDOR_DIR}/SDL EXCLUDE_FROM_ALL)

# Link SDL3 to the engine
#target_link_libraries(wankel_engine PRIVATE SDL3::SDL3)

# Platform-specific configurations
#if(win32)
#    # copy sdl3.dll to the output directory on windows
#    add_custom_command(target wankel_engine post_build
#        COMMAND ${CMAKE_COMMAND} -E copy_if_different
#        "$<TARGET_FILE:SDL3::SDL3>"
#        $<TARGET_FILE_DIR:wankel_engine>)
#endif()

# Add sandbox example
add_subdirectory(${SANDBOX_DIR})

# Enable testing (optional)
option(BUILD_TESTING "Build unit tests" OFF)
if(BUILD_TESTING)
    enable_testing()
    add_subdirectory(tests)
endif()

